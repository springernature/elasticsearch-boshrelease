#!/bin/bash
# Inspired by https://github.com/cloudfoundry/exemplar-release/blob/master/jobs/paragon/templates/post-start
# If a command fails, exit immediately
set -e

<% if !p("elasticsearch.health.disable_post_start") %>

export timeout=<%= p("elasticsearch.health.timeout") %>
export polling_frequency=<%= p("elasticsearch.health.interval") %>

export max_attempts=$((timeout / polling_frequency))
export attempts=0
out=$(mktemp health-XXXXXX)

export url=<%= p("elasticsearch.client.protocol") %>://<%= p("elasticsearch.client.username") %>:<%= p("elasticsearch.client.password") %>@<%= p("elasticsearch.client.host") %>:<%= p("elasticsearch.client.port") %>

while [[ "$max_attempts" -ge "$attempts" ]]; do
    set +e
    echo "attempt $attempts"
    <% if p("elasticsearch.node.allow_data") and not p("elasticsearch.node.allow_master") %>
    curl -s -f --max-time $timeout -sw '\n%{http_code}' -k ${url}/_cluster/health > ${out}
    <% else %>
    curl -s -f --max-time $timeout -sw '\n%{http_code}' -k ${url}/_cluster/health?local=true > ${out}
    <% end %>
    body=$(cat ${out} | head -n -1)
    status=$(cat ${out} | tail -n 1)
    echo "body: ${body}"
    echo "status: ${status}"
    echo $body | grep '"status":"red"'
    grep_red_status=$?
    curl -X PUT -s -H 'Content-Type: application/json' -k ${url}/_cluster/settings \
	-d '{"persistent": {"cluster.routing.allocation.enable": "<%= p("elasticsearch.cluster.routing.allocation.enable_post_start") %>"}}'
    <% if p("elasticsearch.node.allow_data") and not p("elasticsearch.node.allow_master") %>
    if [ "${status}" = "200" ] && [ "${grep_red_status}" != "0" ] && echo ${body} | grep '"status":"green"'; then
        rm ${out}
        exit 0
    fi
    <% else %>
    if [ "${status}" = "200" ] && [ "${grep_red_status}" != "0" ]; then
        rm ${out}
        exit 0
    fi
    <% end %>
    set -e

    attempts=$(($attempts + 1))

    sleep "$polling_frequency"
done

rm ${out}
exit 1

<% else %>

echo "Skipping post-start..."

<% end %>
